{"version":3,"sources":["Result.tsx","store/state.ts","Answer.tsx","Question.tsx","Test.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Result","props","className","number","initState","id","question","answer","variant","isCorrect","Answer","onClickHandler","map","it","index","onClick","Question","Test","App","arrQuestion","arrAnswer","useState","currentQuestion","setCurrentQuestion","setQuestion","setAnswer","setNumber","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAMaA,G,MAAS,SAACC,GACnB,OACI,qBAAKC,UAAU,SAAf,2HAC2BD,EAAME,OADjC,uBCIKC,EAA2B,CACpC,CACIC,GAAI,EACJC,SAAU,gCACVC,OAAQ,CACJ,CAAEC,QAAS,+DAAcC,WAAW,EAAMN,OAAQ,GAClD,CAAEK,QAAS,yDAAaC,WAAW,EAAON,OAAQ,GAClD,CAAEK,QAAS,4HAAyBC,WAAW,EAAON,OAAQ,KAGtE,CACIE,GAAI,EACJC,SAAU,gHACVC,OAAQ,CACJ,CAAEC,QAAS,gHAAuBC,WAAW,EAAON,OAAQ,GAC5D,CAAEK,QAAS,4DAAgBC,WAAW,EAAON,OAAQ,GACrD,CAAEK,QAAS,0GAAsBC,WAAW,EAAMN,OAAQ,KAGlE,CACIE,GAAI,EACJC,SAAU,iCACVC,OAAQ,CACJ,CAAEC,QAAS,6LAA6CC,WAAW,EAAMN,OAAQ,GACjF,CAAEK,QAAS,2RAAgEC,WAAW,EAAON,OAAQ,GACrG,CAAEK,QAAS,+IAA6BC,WAAW,EAAON,OAAQ,KAG1E,CACIE,GAAI,EACJC,SAAU,iCACVC,OAAQ,CACJ,CAAEC,QAAS,0LAAqCC,WAAW,EAAON,OAAQ,GAC1E,CAAEK,QAAS,gVAAkFC,WAAW,EAAMN,OAAQ,GACtH,CAAEK,QAAS,kJAAgCC,WAAW,EAAON,OAAQ,MCtCpEO,EAAS,SAACT,GAAuB,IAClCM,EAA2BN,EAA3BM,OAAQI,EAAmBV,EAAnBU,eAEhB,OACI,qBAAKT,UAAU,SAAf,SAEQK,EAAOK,KAAI,SAACC,EAAIC,GAAL,OAEP,sBAAiBZ,UAAW,UACxBa,QAAS,kBAAIJ,EAAeE,EAAGJ,YADnC,UAEKI,EAAGL,QAFR,MAAUM,SCVjBE,EAAW,SAACf,GACrB,OACI,qBAAKC,UAAU,WAAf,SACKD,EAAMK,YCGNW,EAAO,SAAChB,GAAsB,IAChCK,EAAoCL,EAApCK,SAAUC,EAA0BN,EAA1BM,OAAQI,EAAkBV,EAAlBU,eACzB,OACI,sBAAKT,UAAU,OAAf,UACI,cAAC,EAAD,CAAUI,SAAUA,IACpB,cAAC,EAAD,CAAQC,OAAQA,EAAQI,eAAgBA,QCqBrCO,MAhCf,WACE,IAAMC,EAAcf,EAAUQ,KAAI,SAAAC,GAAE,OAAIA,EAAGP,YACrCc,EAAYhB,EAAUQ,KAAI,SAAAC,GAAE,OAAIA,EAAGN,UAF5B,EAGiCc,mBAAS,GAH1C,mBAGNC,EAHM,KAGWC,EAHX,OAImBF,mBAASF,EAAY,IAJxC,mBAINb,EAJM,KAIIkB,EAJJ,OAKeH,mBAASD,EAAU,IALlC,mBAKNb,EALM,KAKEkB,EALF,OASaJ,mBAAS,GATtB,mBASRlB,EATQ,KASAuB,EATA,KAsBb,OACE,8BACuB,IAApBJ,EACC,cAAC,EAAD,CAAQnB,OAAQA,IAChB,cAAC,EAAD,CAAMG,SAAUA,EAAUC,OAAQA,EAAQI,eAhBzB,SAACF,GAClBA,GACFiB,EAAUvB,EAAS,GAEnBwB,YAAW,kBACRJ,EAAmBD,EAAkB,GACpCE,EAAYL,EAAYG,IACxBG,EAAUL,EAAUE,MAAoB,YCTnCM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4718cf9f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\ntype PropsType = {\r\n    number: number\r\n}\r\n\r\nexport const Result = (props: PropsType) => {\r\n    return (\r\n        <div className=\"result\">\r\n            {`правильных ответов ${props.number} из 4`}\r\n        </div>\r\n    )\r\n}\r\n","export type initStateType = {\r\n    id: number\r\n    question: string;\r\n    answer: answerType\r\n}[]\r\n\r\nexport type answerType = {\r\n    variant: string;\r\n    isCorrect: boolean;\r\n    number: number\r\n}[]\r\n\r\nexport const initState: initStateType = [\r\n    {\r\n        id: 1,\r\n        question: \"React - это...\",\r\n        answer: [\r\n            { variant: 'Библиотека', isCorrect: true, number: 1 },\r\n            { variant: 'Фреймворк', isCorrect: false, number: 0 },\r\n            { variant: 'Язык программирования', isCorrect: false, number: 0 }\r\n        ]\r\n    },\r\n    {\r\n        id: 2,\r\n        question: \"Redux - это библиотека для...\",\r\n        answer: [\r\n            { variant: 'Визуальных эффектов', isCorrect: false, number: 0 },\r\n            { variant: 'Отрисовки UI', isCorrect: false, number: 0 },\r\n            { variant: 'Управления стейтом', isCorrect: true, number: 1 }\r\n        ]\r\n    },\r\n    {\r\n        id: 3,\r\n        question: \"Action - это...\",\r\n        answer: [\r\n            { variant: 'Объект у которого как минимум есть \"type\"', isCorrect: true, number: 1 },\r\n            { variant: 'Функция, которая принимает dispatch и делает внутри асинхрон', isCorrect: false, number: 0 },\r\n            { variant: 'Компонент высшего порядка', isCorrect: false, number: 0 }\r\n        ]\r\n    },\r\n    {\r\n        id: 4,\r\n        question: \"Reducer -это...\",\r\n        answer: [\r\n            { variant: 'библиотека для управления стейтом', isCorrect: false, number: 0 },\r\n            { variant: 'Чистая функция, которая принимает state и action и возвращает измененный state', isCorrect: true, number: 1 },\r\n            { variant: 'хук, для работы с асинхроном', isCorrect: false, number: 0 }\r\n        ]\r\n    },\r\n];\r\n","import React, { useEffect } from 'react'\r\nimport { answerType } from './store/state'\r\n\r\ntype AnswerType = {\r\n    answer: answerType\r\n    onClickHandler: (isCorrect: boolean) => void\r\n}\r\n\r\nexport const Answer = (props: AnswerType) => {\r\n    const { answer, onClickHandler } = props\r\n\r\n    return (\r\n        <div className=\"answer\">\r\n            {\r\n                answer.map((it, index) =>\r\n                            \r\n                    <div key={index} className={\"variant\"}\r\n                        onClick={()=>onClickHandler(it.isCorrect)}> \r\n                        {it.variant} </div>\r\n\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\ntype QuestionType = {\r\n    question: string\r\n}\r\n\r\nexport const Question = (props: QuestionType) => {\r\n    return (\r\n        <div className=\"question\">\r\n            {props.question}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Answer } from './Answer'\r\nimport { Question } from './Question'\r\nimport { answerType } from './store/state'\r\n\r\ntype PropsType = {\r\n    question: string\r\n    answer: answerType\r\n    onClickHandler: (isCorrect: boolean) => void\r\n\r\n}\r\n\r\nexport const Test = (props: PropsType) => {\r\n    const {question, answer, onClickHandler} = props\r\n    return (\r\n        <div className=\"test\">\r\n            <Question question={question} />\r\n            <Answer answer={answer} onClickHandler={onClickHandler} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Result } from './Result';\nimport { initState } from './store/state';\nimport { Test } from './Test';\n\nfunction App() {\n  const arrQuestion = initState.map(it => it.question)\n  const arrAnswer = initState.map(it => it.answer)\n  const [currentQuestion, setCurrentQuestion] = useState(1)\n  const [question, setQuestion] = useState(arrQuestion[0])\n  const [answer, setAnswer] = useState(arrAnswer[0])\n\n\n\n  let [number, setNumber] = useState(0)\n  const onClickHandler = (isCorrect: boolean) => {\n    if (isCorrect) {\n      setNumber(number + 1)\n    }   \n      setTimeout(() =>\n        (setCurrentQuestion(currentQuestion + 1),\n          setQuestion(arrQuestion[currentQuestion]),\n          setAnswer(arrAnswer[currentQuestion])), 1500\n      )\n  }\n\n\n  return (\n    <div >\n      {currentQuestion === 5\n      ? <Result number={number}/>\n      : <Test question={question} answer={answer} onClickHandler={onClickHandler}/>}\n      \n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}