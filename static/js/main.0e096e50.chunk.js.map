{"version":3,"sources":["Preview.tsx","Result.tsx","store/state.ts","Answer.tsx","Question.tsx","Test.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Preview","props","className","onClick","setCurrentQuestion","setAnswer","arrAnswer","setQuestion","arrQuestion","setNumber","to","Result","React","memo","number","initState","id","question","answer","variant","isCorrect","Answer","onClickHandler","map","it","index","Question","Test","currentQuestion","App","useState","path","exact","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"iPAaaA,EAAU,SAACC,GAQpB,OACI,qBAAKC,UAAU,OAAOC,QAPH,WACnBF,EAAMG,mBAAmB,GACzBH,EAAMI,UAAUJ,EAAMK,UAAU,IAChCL,EAAMM,YAAYN,EAAMO,YAAY,IACpCP,EAAMQ,UAAU,IAGhB,SACI,sBAAKP,UAAU,UAAf,UACI,qBAAKA,UAAU,OAAf,4HAGA,cAAC,IAAD,CAASQ,GAAI,QAAb,yDCpBHC,EAASC,IAAMC,MAAK,SAACZ,GAC9B,OACI,qBAAKC,UAAU,OAAf,SACI,sBAAKA,UAAU,UAAf,4HAC2BD,EAAMa,OADjC,mBAEI,cAAC,IAAD,CAASJ,GAAI,IAAKR,UAAU,SAA5B,8ECAHa,EAA2B,CACpC,CACIC,GAAI,EACJC,SAAU,gCACVC,OAAQ,CACJ,CAAEC,QAAS,+DAAcC,WAAW,EAAMN,OAAQ,GAClD,CAAEK,QAAS,yDAAaC,WAAW,EAAON,OAAQ,GAClD,CAAEK,QAAS,4HAAyBC,WAAW,EAAON,OAAQ,KAGtE,CACIE,GAAI,EACJC,SAAU,gHACVC,OAAQ,CACJ,CAAEC,QAAS,gHAAuBC,WAAW,EAAON,OAAQ,GAC5D,CAAEK,QAAS,4DAAgBC,WAAW,EAAON,OAAQ,GACrD,CAAEK,QAAS,0GAAsBC,WAAW,EAAMN,OAAQ,KAGlE,CACIE,GAAI,EACJC,SAAU,iCACVC,OAAQ,CACJ,CAAEC,QAAS,6LAA6CC,WAAW,EAAMN,OAAQ,GACjF,CAAEK,QAAS,2RAAgEC,WAAW,EAAON,OAAQ,GACrG,CAAEK,QAAS,+IAA6BC,WAAW,EAAON,OAAQ,KAG1E,CACIE,GAAI,EACJC,SAAU,iCACVC,OAAQ,CACJ,CAAEC,QAAS,0LAAqCC,WAAW,EAAON,OAAQ,GAC1E,CAAEK,QAAS,gVAAkFC,WAAW,EAAMN,OAAQ,GACtH,CAAEK,QAAS,kJAAgCC,WAAW,EAAON,OAAQ,KAG7E,CACIE,GAAI,EACJC,SAAU,yIACVC,OAAQ,CACJ,CAAEC,QAAS,oBAAqBC,WAAW,EAAON,OAAQ,GAC1D,CAAEK,QAAS,sBAAuBC,WAAW,EAAON,OAAQ,GAC5D,CAAEK,QAAS,2BAA4BC,WAAW,EAAMN,OAAQ,KAGxE,CACIE,GAAI,EACJC,SAAU,gDACVC,OAAQ,CACJ,CAAEC,QAAS,gCAAiCC,WAAW,EAAMN,OAAQ,GACrE,CAAEK,QAAS,iBAAkBC,WAAW,EAAON,OAAQ,GACvD,CAAEK,QAAS,uBAAwBC,WAAW,EAAON,OAAQ,KAGrE,CACIE,GAAI,EACJC,SAAU,8QACVC,OAAQ,CACJ,CAAEC,QAAS,MAAOC,WAAW,EAAON,OAAQ,GAC5C,CAAEK,QAAS,OAAQC,WAAW,EAAON,OAAQ,GAC7C,CAAEK,QAAS,MAAOC,WAAW,EAAMN,OAAQ,MCjE1CO,EAAST,IAAMC,MAAK,SAACZ,GAAuB,IAC7CiB,EAA2BjB,EAA3BiB,OAAQI,EAAmBrB,EAAnBqB,eAEhB,OACI,qBAAKpB,UAAU,SAAf,SAEQgB,EAAOK,KAAI,SAACC,EAAIC,GAAL,OACP,qBAAiBvB,UAAW,UACxBC,QAAS,kBAAImB,EAAeE,EAAGJ,YADnC,SAEKI,EAAGL,SAFEM,WCTjBC,EAAWd,IAAMC,MAAK,SAACZ,GAChC,OACI,qBAAKC,UAAU,WAAf,SACKD,EAAMgB,cCKNU,EAAOf,IAAMC,MAAK,SAACZ,GAAsB,IAC3CgB,EAA6DhB,EAA7DgB,SAAUC,EAAmDjB,EAAnDiB,OAAQI,EAA2CrB,EAA3CqB,eAAgBM,EAA2B3B,EAA3B2B,gBAAiBd,EAAUb,EAAVa,OAC1D,OACI,8BAE4B,IAApBc,EACE,cAACjB,EAAD,CAAQG,OAAQA,IACjB,sBAAKZ,UAAU,OAAf,UACD,cAACwB,EAAD,CAAUT,SAAUA,IACpB,cAACI,EAAD,CAAQH,OAAQA,EAAQI,eAAgBA,YC6BzCO,EA5CHjB,IAAMC,MAAK,WACrB,IAAML,EAAcO,EAAUQ,KAAI,SAAAC,GAAE,OAAIA,EAAGP,YACrCX,EAAYS,EAAUQ,KAAI,SAAAC,GAAE,OAAIA,EAAGN,UAFd,EAGmBY,mBAAS,GAH5B,mBAGpBF,EAHoB,KAGHxB,EAHG,OAIK0B,mBAAStB,EAAY,IAJ1B,mBAIpBS,EAJoB,KAIVV,EAJU,OAKCuB,mBAASxB,EAAU,IALpB,mBAKpBY,EALoB,KAKZb,EALY,OAUDyB,mBAAS,GAVR,mBAUtBhB,EAVsB,KAUdL,EAVc,KAWrBa,EAAiB,SAACF,GAClBA,GACFX,EAAUK,EAAS,GAErBV,EAAmBwB,EAAkB,GACrCrB,EAAYC,EAAYoB,IACxBvB,EAAUC,EAAUsB,KAKtB,OACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOG,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,cAAC,EAAD,CACpC7B,mBAAoBA,EACpBC,UAAWA,EACXC,UAAWA,EACXC,YAAaA,EACbC,YAAaA,EACbC,UAAWA,OACb,cAAC,IAAD,CAAOsB,KAAM,UAAWC,OAAK,EAACC,OAAQ,kBAAM,cAACtB,EAAD,CAAQG,OAAQA,OAC5D,cAAC,IAAD,CAAOiB,KAAM,QAASE,OAAQ,kBAAM,cAACN,EAAD,CAAMV,SAAUA,EAClDC,OAAQA,EACRI,eAAgBA,EAChBM,gBAAiBA,EACjBd,OAAQA,eC/BHoB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,IAAD,UACA,cAAC,EAAD,QAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0e096e50.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { answerType } from './store/state'\r\n\r\ntype PropsType = {\r\n    setCurrentQuestion: (number: number) => void\r\n    setAnswer: (answer: answerType) => void\r\n    arrAnswer: answerType[]\r\n    setQuestion: (question: string) => void\r\n    arrQuestion: string[]\r\n    setNumber: (number: number) => void\r\n}\r\n\r\nexport const Preview = (props: PropsType) => {\r\n\r\n    const onClickHandler = () => {\r\n        props.setCurrentQuestion(1)\r\n        props.setAnswer(props.arrAnswer[0])\r\n        props.setQuestion(props.arrQuestion[0])\r\n        props.setNumber(0)\r\n    }\r\n    return (\r\n        <div className='test' onClick={onClickHandler}>\r\n            <div className='preview'>\r\n                <div className='text'>\r\n                    Проверь свои знания React\r\n                </div>\r\n                <NavLink to={'/test'}>Начать!</NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\ntype PropsType = {\r\n    number: number\r\n}\r\n\r\nexport const Result = React.memo((props: PropsType) => {\r\n    return (\r\n        <div className=\"test\">\r\n            <div className=\"preview\">\r\n                {`Правильных ответов ${props.number} из 7`}\r\n                <NavLink to={'/'} className='goHome'>На главную!</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n","export type initStateType = {\r\n    id: number\r\n    question: string;\r\n    answer: answerType\r\n}[]\r\n\r\nexport type answerType = {\r\n    variant: string;\r\n    isCorrect: boolean;\r\n    number: number\r\n}[]\r\n\r\nexport const initState: initStateType = [\r\n    {\r\n        id: 1,\r\n        question: \"React - это...\",\r\n        answer: [\r\n            { variant: 'Библиотека', isCorrect: true, number: 1 },\r\n            { variant: 'Фреймворк', isCorrect: false, number: 0 },\r\n            { variant: 'Язык программирования', isCorrect: false, number: 0 }\r\n        ]\r\n    },\r\n    {\r\n        id: 2,\r\n        question: \"Redux - это библиотека для...\",\r\n        answer: [\r\n            { variant: 'Визуальных эффектов', isCorrect: false, number: 0 },\r\n            { variant: 'Отрисовки UI', isCorrect: false, number: 0 },\r\n            { variant: 'Управления стейтом', isCorrect: true, number: 1 }\r\n        ]\r\n    },\r\n    {\r\n        id: 3,\r\n        question: \"Action - это...\",\r\n        answer: [\r\n            { variant: 'Объект у которого как минимум есть \"type\"', isCorrect: true, number: 1 },\r\n            { variant: 'Функция, которая принимает dispatch и делает внутри асинхрон', isCorrect: false, number: 0 },\r\n            { variant: 'Компонент высшего порядка', isCorrect: false, number: 0 }\r\n        ]\r\n    },\r\n    {\r\n        id: 4,\r\n        question: \"Reducer -это...\",\r\n        answer: [\r\n            { variant: 'библиотека для управления стейтом', isCorrect: false, number: 0 },\r\n            { variant: 'Чистая функция, которая принимает state и action и возвращает измененный state', isCorrect: true, number: 1 },\r\n            { variant: 'хук, для работы с асинхроном', isCorrect: false, number: 0 }\r\n        ]\r\n    },\r\n    {\r\n        id: 5,\r\n        question: \"Хуки из библиотеки react-redux - это...\",\r\n        answer: [\r\n            { variant: 'useState, useMemo', isCorrect: false, number: 0 },\r\n            { variant: 'useCallback, useRef', isCorrect: false, number: 0 },\r\n            { variant: 'useSelector, useDispatch', isCorrect: true, number: 1 }\r\n        ]\r\n    },\r\n    {\r\n        id: 6,\r\n        question: \"Методы store...\",\r\n        answer: [\r\n            { variant: 'getState, subscribe, dispatch', isCorrect: true, number: 1 },\r\n            { variant: 'reduser, state', isCorrect: false, number: 0 },\r\n            { variant: 'then, catch, finally', isCorrect: false, number: 0 }\r\n        ]\r\n    },\r\n    {\r\n        id: 7,\r\n        question: \"Чтобы обновить данные нужно отправить запрос типа...\",\r\n        answer: [\r\n            { variant: 'get', isCorrect: false, number: 0 },\r\n            { variant: 'post', isCorrect: false, number: 0 },\r\n            { variant: 'put', isCorrect: true, number: 1 }\r\n        ]\r\n    },\r\n];\r\n","import React from 'react'\r\nimport { answerType } from './store/state'\r\n\r\ntype AnswerType = {\r\n    answer: answerType\r\n    onClickHandler: (isCorrect: boolean) => void\r\n}\r\n\r\nexport const Answer = React.memo((props: AnswerType) => {\r\n    const { answer, onClickHandler } = props\r\n\r\n    return (\r\n        <div className=\"answer\">\r\n            {\r\n                answer.map((it, index) =>                           \r\n                    <div key={index} className={\"variant\"}\r\n                        onClick={()=>onClickHandler(it.isCorrect)}> \r\n                        {it.variant}\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react'\r\n\r\ntype QuestionType = {\r\n    question: string\r\n}\r\n\r\nexport const Question = React.memo((props: QuestionType) => {\r\n    return (\r\n        <div className=\"question\">\r\n            {props.question}\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react'\r\nimport { Answer } from './Answer'\r\nimport { Question } from './Question'\r\nimport { Result } from './Result'\r\nimport { answerType } from './store/state'\r\n\r\ntype PropsType = {\r\n    question: string\r\n    answer: answerType\r\n    onClickHandler: (isCorrect: boolean) => void\r\n    currentQuestion: number\r\n    number: number\r\n}\r\n\r\nexport const Test = React.memo((props: PropsType) => {\r\n    const {question, answer, onClickHandler, currentQuestion, number} = props\r\n    return (\r\n        <div>\r\n            {\r\n                currentQuestion === 8\r\n                ? <Result number={number}/>\r\n                :<div className=\"test\">\r\n                <Question question={question} />\r\n                <Answer answer={answer} onClickHandler={onClickHandler} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n})","import React, { useCallback, useState } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { Preview } from './Preview';\nimport { Result } from './Result';\nimport { initState } from './store/state';\nimport { Test } from './Test';\n\nconst App = React.memo(() => {\n  const arrQuestion = initState.map(it => it.question)\n  const arrAnswer = initState.map(it => it.answer)\n  const [currentQuestion, setCurrentQuestion] = useState(1)\n  const [question, setQuestion] = useState(arrQuestion[0])\n  const [answer, setAnswer] = useState(arrAnswer[0])\n\n\n\n\n  let [number, setNumber] = useState(0)\n  const onClickHandler = (isCorrect: boolean) => {\n    if (isCorrect) {\n      setNumber(number + 1)\n    }\n    setCurrentQuestion(currentQuestion + 1)\n    setQuestion(arrQuestion[currentQuestion])\n    setAnswer(arrAnswer[currentQuestion])\n\n  }\n\n\n  return (\n    <div >\n      <Switch>\n        <Route path={\"/\"} exact render={() => <Preview\n          setCurrentQuestion={setCurrentQuestion}\n          setAnswer={setAnswer}\n          arrAnswer={arrAnswer}\n          setQuestion={setQuestion}\n          arrQuestion={arrQuestion}\n          setNumber={setNumber}/>} />\n        <Route path={\"/result\"} exact render={() => <Result number={number}/>} />\n        <Route path={\"/test\"} render={() => <Test question={question}\n          answer={answer}\n          onClickHandler={onClickHandler}\n          currentQuestion={currentQuestion}\n          number={number} />} />\n      </Switch>\n\n    </div>\n  );\n})\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n    <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}